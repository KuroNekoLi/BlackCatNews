default_platform(:ios)

platform :ios do
  # 偵測認證方式：
  # - 優先使用 App Store Connect API Key（無需 2FA，CI 友善）
  # - 否則使用 Apple ID + App 專用密碼（FASTLANE_USER/FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD）
  use_api_key = ENV["ASC_KEY_ID"].to_s != "" && (ENV["ASC_PRIVATE_KEY_PATH"].to_s != "" || ENV["ASC_PRIVATE_KEY"].to_s != "") && ENV["ASC_ISSUER_ID"].to_s != ""
  auth_options = {}

  if use_api_key
    api_key = if ENV["ASC_PRIVATE_KEY_PATH"]
      app_store_connect_api_key(
        key_id: ENV.fetch("ASC_KEY_ID"),
        issuer_id: ENV.fetch("ASC_ISSUER_ID"),
        key_filepath: ENV.fetch("ASC_PRIVATE_KEY_PATH"),
        in_house: false
      )
    else
      app_store_connect_api_key(
        key_id: ENV.fetch("ASC_KEY_ID"),
        issuer_id: ENV.fetch("ASC_ISSUER_ID"),
        key_content: ENV.fetch("ASC_PRIVATE_KEY"),
        is_key_content_base64: ENV["ASC_PRIVATE_KEY_BASE64"] == "true",
        in_house: false
      )
    end
    auth_options[:api_key] = api_key
  elsif ENV["FASTLANE_USER"].to_s != ""
    # 使用 Apple ID；請同時提供 FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD
    auth_options[:username] = ENV["FASTLANE_USER"]
  end

  desc "Build ipa for App Store distribution"
  lane :build do
    # 使用 match 安裝的 App Store 描述檔（避免在 CI 登入 Xcode 帳號）
    app_id = ENV["APP_IDENTIFIER"] || "com.linli.blackcatnews"
    profile_name = "match AppStore #{app_id}"
    export_opts = {
      provisioningProfiles: {
        app_id => profile_name
      }
    }

    gym(
      workspace: "iosApp.xcworkspace",
      scheme: "iosApp",
      configuration: "Release",
      export_method: "app-store",
      clean: true,
      include_bitcode: false,
      export_options: export_opts
    )
  end

  desc "Upload the latest build to TestFlight"
  lane :beta do
    build
    # 檢查是否有 API Key
    if ENV["ASC_KEY_ID"] && ENV["ASC_ISSUER_ID"] && ENV["ASC_PRIVATE_KEY"]
      api_key = app_store_connect_api_key(
        key_id: ENV["ASC_KEY_ID"],
        issuer_id: ENV["ASC_ISSUER_ID"],
        key_content: ENV["ASC_PRIVATE_KEY"],
        is_key_content_base64: ENV["ASC_PRIVATE_KEY_BASE64"] == "true"
      )
      
      pilot(
        api_key: api_key,
        ipa: "BlackCatNews.ipa",
        skip_waiting_for_build_processing: false
      )
    else
      # 使用 Apple ID 路徑
      pilot(
        **auth_options,
        skip_waiting_for_build_processing: false
      )
    end
  end

  desc "Deliver the build to App Store Connect (metadata handled manually)"
  lane :release do
    build
    
    # 讀取環境變數控制送審與上架
    submit_for_review = ENV["SUBMIT_FOR_REVIEW"] == "true"
    automatic_release = ENV["AUTOMATIC_RELEASE"] == "true"
    
    # 檢查是否有 API Key
    if ENV["ASC_KEY_ID"] && ENV["ASC_ISSUER_ID"] && ENV["ASC_PRIVATE_KEY"]
      api_key = app_store_connect_api_key(
        key_id: ENV["ASC_KEY_ID"],
        issuer_id: ENV["ASC_ISSUER_ID"],
        key_content: ENV["ASC_PRIVATE_KEY"],
        is_key_content_base64: ENV["ASC_PRIVATE_KEY_BASE64"] == "true"
      )
      
      deliver(
        api_key: api_key,
        ipa: "BlackCatNews.ipa",
        submit_for_review: submit_for_review,
        automatic_release: automatic_release,
        skip_metadata: true,
        skip_screenshots: true,
        force: true
      )
    else
      # 使用 Apple ID 路徑
      deliver(
        **auth_options,
        submit_for_review: submit_for_review,
        automatic_release: automatic_release,
        skip_metadata: true,
        skip_screenshots: true,
        force: true
      )
    end
  end

end
